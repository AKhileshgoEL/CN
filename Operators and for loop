FIBONACCI SERIES 
Problem statement:-
The n-th term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula -
Solution:-
void arrange(int *arr, int n)
{
    int start=0,end=n-1;
    int val=1;
    while(start<end)
    {
        arr[start]=val;
        val++;
        start++;
        arr[end]=val;
        val++;
        end--;
    }
    if(start==end)
    {
         arr[start]=val;
    }
}

ALL PRIME NOS.
Problem statement:-
Given an integer N, print all the prime numbers that lie in the range 2 to N (both inclusive).
Print the prime numbers in different lines.
Solution:-

#include <iostream>
using namespace std;

int main(){
	int n;
	bool k = true;
	cin >> n;
	for(int i=2;i<=n;i++){
		for(int j=2;j<i;j++){
			if(i%j==0){
				k = false;
				break;
			}
		}
                if (k==true){
                        cout << i << endl;
                }
        }
}
TERMS OF AP
Problem statement:-
Write a program to print first x terms of the series 3N + 2 which are not multiples of 4.

#include<iostream>
using namespace std;

int main() {
	int i=1;
	int j=1;
	int n;
	cin >> n;

	while(j<=n){
		if((3*i + 2)%4!=0){
			cout << (3*i + 2) << " " ;
			j++;
		}
		i++;	
	}
}

REVERSE NUMBERS
Problem statement:-
Write a program to generate the reverse of a given number N. Print the corresponding reverse number.
Solution:-
#include<iostream>
using namespace std;

int main() {
	int n;
	int rev_num = 0;
	cin >>n;
	while(n!=0){
		rev_num = rev_num*10 + n%10;
		n = n/10;
	}
	cout << rev_num;
	
}

BINARY TO DECIMAL
Problem statement:-
Given a binary number as an integer N, convert it into decimal and print.

#include<iostream>
using namespace std;

int main() {
	int n;
	cin >>n;
	int sum = 0;
	int exp = 1;

	while(n > 0){
		int rem = n%10;
		sum += rem*exp;
		exp *= 2;		
		n = n/10;
	}
	cout << sum;
}

DECIMAL TO BINARY
Problem statement:-
Given a decimal number (integer N), convert it into binary and print.
#include<iostream>
using namespace std;

int main() {
	int n;
	cin >> n;
	long tens = 1;
	long sum = 0;
	while(n > 0){
		sum += (n%2)*tens;
		tens *= 10;
		n = n/2;
	}

	cout << sum ;
}

